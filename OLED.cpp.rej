--- OLED.cpp	2018-03-27 23:05:46.465395596 +0000
+++ OLED.cpp	2018-04-22 07:32:30.790370075 +0000
@@ -125,6 +148,27 @@ const unsigned char logo_fusion_bmp [] =
 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00
 };
 
+//Logo Analog FM 128x16
+const unsigned char logo_svxlink_bmp [] =
+{
+0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 
+0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x03, 0x00, 0x00, 0x00, 0x00, 0x00, 0xe0, 0x00, 0x00, 
+0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x03, 0x80, 0x00, 0x1c, 0x00, 0x00, 0xe0, 0x00, 0x00, 
+0x00, 0x01, 0xff, 0x00, 0x00, 0x00, 0x00, 0x03, 0x80, 0x00, 0x0c, 0x00, 0x00, 0xf0, 0x00, 0x00, 
+0x00, 0x1f, 0xfc, 0x00, 0x00, 0x00, 0x00, 0x03, 0x80, 0x00, 0x00, 0x00, 0x00, 0x70, 0x03, 0x00, 
+0x00, 0xf8, 0x00, 0x00, 0x00, 0x32, 0x00, 0xc3, 0x80, 0x00, 0x00, 0xe0, 0x78, 0x70, 0x1e, 0x00, 
+0x03, 0xe0, 0x00, 0x0c, 0x00, 0xff, 0x01, 0xc3, 0x80, 0x00, 0x0e, 0xf7, 0xfe, 0x70, 0xf8, 0x00, 
+0x03, 0xfe, 0x00, 0x0e, 0x01, 0xe7, 0x87, 0x83, 0x80, 0x00, 0x0e, 0xfe, 0x06, 0x73, 0xe0, 0x00, 
+0x00, 0x7f, 0xf0, 0x0f, 0x03, 0xc1, 0xef, 0x03, 0x00, 0x00, 0x0e, 0xf0, 0x06, 0x7f, 0x00, 0x00, 
+0x00, 0x00, 0x7f, 0xc7, 0x83, 0x80, 0xfe, 0x03, 0x00, 0x00, 0x0e, 0xe0, 0x06, 0x7c, 0x00, 0x00, 
+0x00, 0x00, 0x03, 0xc3, 0xcf, 0x80, 0x7e, 0x03, 0x00, 0x00, 0x0e, 0xe0, 0x06, 0x7f, 0xc0, 0x00, 
+0x00, 0x00, 0x0f, 0x81, 0xff, 0x00, 0xf7, 0x87, 0x00, 0x00, 0x0e, 0xe0, 0x06, 0x79, 0xff, 0x80, 
+0x07, 0x00, 0x7e, 0x00, 0xfe, 0x03, 0xc3, 0xc7, 0x80, 0x00, 0x0e, 0xe0, 0x06, 0x78, 0x03, 0xf0, 
+0x03, 0xff, 0xf0, 0x00, 0x7c, 0x0f, 0x80, 0xf7, 0xff, 0xff, 0xce, 0xe0, 0x06, 0x70, 0x00, 0x00, 
+0x00, 0x00, 0x00, 0x00, 0x10, 0x1e, 0x00, 0x78, 0x00, 0x00, 0x00, 0x00, 0x02, 0x60, 0x00, 0x00, 
+0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00
+};
+
 
 COLED::COLED(unsigned char displayType, unsigned char displayBrightness, bool displayInvert, bool displayScroll) :
 m_displayType(displayType),
@@ -179,18 +223,19 @@ void COLED::setIdleInt()
     display.clearDisplay();
     OLED_statusbar();
 
-//    display.setCursor(0,30);
-//    display.setTextSize(3);
-//    display.print("Idle");
+    display.setCursor(0,30);
+    display.setTextSize(3);
+    display.print("Idle");
 
-//    display.setTextSize(1);
-    display.startscrolldiagright(0x00,0x0f);  //the MMDVM logo scrolls the whole screen
+    //display.setTextSize(1);
+    //display.startscrolldiagright(0x00,0x0f);  //the MMDVM logo scrolls the whole screen
     display.display();
 }
 
 void COLED::setErrorInt(const char* text)
 {
     m_mode = MODE_ERROR;
+    display.setTextSize(1);
 
     display.clearDisplay();
     OLED_statusbar();
@@ -241,6 +287,7 @@ void COLED::clearDStarInt()
 {
     display.fillRect(0,OLED_LINE1, display.width(),display.height(),BLACK); //clear everything beneath the logo
 
+    display.setTextSize(1);
     display.setCursor(40,38);
     display.print("Listening");
 
@@ -251,6 +298,7 @@ void COLED::writeDMRInt(unsigned int slo
 {
 
     if (m_mode != MODE_DMR) {
+    display.setTextSize(1);
 
     display.clearDisplay();
 
@@ -294,6 +342,7 @@ void COLED::writeDMRInt(unsigned int slo
 
 void COLED::clearDMRInt(unsigned int slotNo)
 {
+    display.setTextSize(1);
     if (slotNo == 1U)
       {
       display.fillRect(0, OLED_LINE2, display.width(), 20, BLACK);
@@ -372,6 +425,7 @@ void COLED::clearP25Int()
 void COLED::writeNXDNInt(const char* source, bool group, unsigned int dest, const char* type)
 {
     m_mode = MODE_NXDN;
+    display.setTextSize(1);
 
     display.clearDisplay();
     display.fillRect(0, OLED_LINE1, display.width(), display.height(), BLACK);
@@ -388,6 +442,8 @@ void COLED::writeNXDNInt(const char* sou
 
 void COLED::clearNXDNInt()
 {
+    display.setTextSize(1);
+
     display.fillRect(0, OLED_LINE1, display.width(), display.height(), BLACK);
 
     display.setCursor(40,38);
